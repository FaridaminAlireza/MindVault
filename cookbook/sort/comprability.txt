Comparability in Sorting Algorithms

A sorting algorithm is called comparison-based if it determines
 the order of elements solely by comparing them (e.g., using <, >, or ==). 
 These algorithms make decisions based on pairwise comparisons between elements.


Comparison-Based Sorting Algorithms:
These rely on element-to-element comparison.
- Bubble Sort
- Insertion Sort
- Selection Sort
- Merge Sort
- Quick Sort
- Heap Sort
- Shell Sort

Properties:
- Time complexity lower bound: O(n log n) for comparison-based sorting.
- Works on any data type that supports comparison operators.


Non-Comparison-Based Sorting Algorithms:
These use numerical properties, hashing, or
 digit/character positions rather than direct comparisons.
- Counting Sort
- Radix Sort
- Bucket Sort

Properties:
- Can achieve O(n) time complexity under certain constraints.
- Require that input data has a limited range or numeric structure
 (e.g., integers, digits, fixed-length strings).
